# Supabase Configuration
# Copy this file to .env.local and fill in your actual values

# Your Supabase project URL
NEXT_PUBLIC_SUPABASE_URL=https://your-project-id.supabase.co

# Your Supabase public API key (anon key)
NEXT_PUBLIC_SUPABASE_ANON_KEY=your-anon-key-here

# Instructions for setup:
# 1. Create a Supabase project at https://supabase.com
# 2. Go to Settings > API in your Supabase dashboard
# 3. Copy the Project URL and anon/public key
# 4. Create a table named 'listings' with the following columns:
#    - Title (text)
#    - Rent (integer) - rent per calendar month in pounds
#    - Listed (timestamp) - when the property was listed
#    - Bedrooms (integer) - number of bedrooms
#    - Baths (integer) - number of bathrooms
#    - Location (text) - area/postcode
#    - Description (text) - property description
#    - Furnished (boolean) - true if furnished, false if unfurnished
#    - Garden (boolean) - true if has garden/outdoor space
#    - SquareFootage (integer) - property size in square feet
#    - PetParkingCosts (integer) - extra costs for pet parking in pounds
#    - StairFreeAccess (boolean) - true if stair-free access available
#    - HouseShare (boolean) - true if this is a house share

# Authentication Setup:
# The application includes built-in authentication using Supabase Auth.
# When Supabase is configured, users can:
# - Sign up with email/password and role selection
# - Sign in to existing accounts  
# - Have their role stored in user metadata
# - Access role-based features (admin, agent, tenant)
#
# Supported user roles:
# - tenant: Users looking for pet-friendly rentals
# - agent: Property agents/landlords listing properties
# - admin: System administrators
#
# Mock Mode:
# When Supabase credentials are not configured, the app runs in mock mode
# with simulated authentication for development and testing.

# For Vercel deployment:
# Add these variables in your Vercel project settings under Environment Variables